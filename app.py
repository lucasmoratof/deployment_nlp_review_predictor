# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kgf_BpY4nU7w7ohEbivEC-iaT9Z603UY
"""

# App for review quality prediction in Portuguese
from flask import Flask, render_template, url_for, request
import pandas as pd
import pickle
import joblib

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report
from sklearn.model_selection import RandomizedSearchCV

# start the flask stuff we will use
app= Flask(__name__)

@app.route('/')
def home():
  return render_template('home.html')

@app.route('/predict', methods=['POST'])
def predict():

  df= pd.read_csv('reviews_nlp.csv', usecols=['review_comment_message', 'is_good_review'])
  # feature and label
  X= df['review_comment_message']
  y= df['is_good_review'] # labels: 0 for no, 1 for yes

  # Extract Features with CountVectorizer
  cv= CountVectorizer()
  X= cv.fit_transform(X)

  # Split, leaving 70% for training and 30% for testing
  X_train, X_test, y_train, y_test= train_test_split(X, y, test_size= 0.3, random_state= 24)

  # start and fit the classifier
  clf= MultinomialNB()
  clf.fit(X_train, y_train)
  clf.score(X_test, y_test)

  # using a saved model: 
  # joblib.dump(clf, 'NB_reviews_model.pkl')
  # NB_reviews_model= open('NB_reviews_model.pkl', 'rb')
  # clf= joblib.load(NB_reviews_model)

  if request.method == 'POST':
    message= request.form['message']
    data= [message]
    vect= cv.transform(data).toarray()
    my_prediction= clf.predict(vect)
  return render_template('result.html', prediction= my_prediction)



if __name__ == '__main__':
    app.run(debug=True)